[{"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/index.js":"1","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/App.js":"2","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Documentation.js":"3","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/About.js":"4","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Home.js":"5","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Authorization.js":"6","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/Navigation.js":"7","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/Header.js":"8","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/PopUp.js":"9","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/UrlExplorer.js":"10"},{"size":220,"mtime":1612277100192,"results":"11","hashOfConfig":"12"},{"size":1128,"mtime":1612426239488,"results":"13","hashOfConfig":"12"},{"size":263,"mtime":1612391576280,"results":"14","hashOfConfig":"12"},{"size":223,"mtime":1612391541116,"results":"15","hashOfConfig":"12"},{"size":419,"mtime":1612391657410,"results":"16","hashOfConfig":"12"},{"size":2218,"mtime":1612432796844,"results":"17","hashOfConfig":"12"},{"size":1084,"mtime":1612391521417,"results":"18","hashOfConfig":"12"},{"size":478,"mtime":1612392005088,"results":"19","hashOfConfig":"12"},{"size":583,"mtime":1612275368146,"results":"20","hashOfConfig":"12"},{"size":2902,"mtime":1612364492169,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1d6hfag",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/index.js",[],["48","49"],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/App.js",["50"],"import './App.scss';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Container} from 'react-bootstrap';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Documentation from './pages/Documentation';\nimport Authorization from './pages/Authorization';\nimport Col from 'react-bootstrap/Col';\n\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Container fluid>\n          <Navigation />\n          <Switch>\n            <Route path='/' exact>\n              <Home />\n            </Route>\n            <Route path='/About' component={About} />\n            <Route path='/Documentation' component={Documentation} />\n            <Route path='/Authorization' component={Authorization} />\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// Nalink active variant bootstrap?\n// Nesting create components inside bootstrap components and vise versa?\n// overwriting using bootstrap classes not working? full with for pop-up, justify content for nav link items...\n","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Documentation.js",[],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/About.js",[],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Home.js",[],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/pages/Authorization.js",["51"],"import './Authorization.scss';\nimport './utility.scss';\nimport React, {useState, useEffect} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {useForm} from 'react-hook-form';\nimport {ErrorMessage} from '@hookform/error-message';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport axios from 'axios';\nimport * as yup from 'yup';\n\n// controlled component hebben we\n// post request\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n});\n\nfunction InputWithFeedback({name, type, register, errors, humanReadbleName}) {\n  return (\n    <>\n      <Form.Label>{humanReadbleName}</Form.Label>\n      <Form.Control\n        type={type}\n        name={name}\n        ref={register}\n        className={errors[name] ? 'is-invalid' : ''} // { lastName: 'some error' }\n      />\n      <Form.Control.Feedback type='invalid'>\n        <ErrorMessage errors={errors} name={name} />\n      </Form.Control.Feedback>\n    </>\n  );\n}\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nfunction Authorization() {\n  const [status, setStatus] = useState({});\n\n  const {register, handleSubmit, errors} = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  async function onSubmit(data) {\n    console.log('data.email', data.email);\n    if (data) {\n      try {\n        const response = await axios.post(`${baseUrl}/apikey`, {\n          email: data.email,\n        });\n        setStatus({\n          code: response.status,\n          text: response.statusText,\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n  return (\n    <div className='authorization-bg'>\n      <div className='container'>\n        {status.code === 201 ? (\n          'An email has been sent to you with your API key'\n        ) : (\n          <Form noValidate validated={false} onSubmit={handleSubmit(onSubmit)}>\n            <InputWithFeedback\n              humanReadbleName='Email'\n              name='email'\n              type='email'\n              errors={errors}\n              register={register}\n            />\n            <Button variant='primary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Authorization;\n","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/Navigation.js",["52"],"import './Navigation.scss';\nimport '../pages/utility.scss';\nimport React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {NavLink} from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Navigation() {\n  return (\n    <div className='navigation-bg'>\n      <div className='container'>\n        <Navbar bg='dark' variant='dark' expand='lg' sticky='top'>\n          <Navbar.Brand as={NavLink} to='/' exact>\n            Synthesizer API logo\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={NavLink} to='/About'>\n                About\n              </Nav.Link>\n              <Nav.Link as={NavLink} to='/Documentation'>\n                Documentation\n              </Nav.Link>\n              <Nav.Link as={NavLink} to='/Authorization'>\n                Authorization\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/Header.js",[],["53","54"],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/PopUp.js",[],"/Users/Bernard/Desktop/coaching/program/sprint 3 - api/roland-api/client/src/components/UrlExplorer.js",["55","56"],"import './UrlExplorer.scss';\nimport React, {useState, useEffect} from 'react';\nimport {Form, Col, InputGroup, Button, FormControl} from 'react-bootstrap';\nimport exampleJson from '../exampleJson.json';\nimport axios from 'axios';\n\nlet jsonParsed = JSON.stringify(exampleJson, null, 4);\n\n// console.log('jsonParsed', jsonParsed);\n\n// render: function() {\n//     var json = this.getStateFromFlux().json;\n//     return (\n//       <div>\n//         <JsonSubmitter onSubmit={this.onSubmit} />\n//         { JSON.stringify(json, null, 2) }\n//       </div>\n//     );\n//   },\n\nconst baseUrl = process.env.REACT_APP_API_URL;\nconsole.log('process.env', process.env);\n\n// synths?key=\n\nconst key = 'BV0B0QX-X8Y4JEK-GYZRXSZ-7NKSKP6';\n\nfunction UrlExplorer() {\n  const [data, setData] = useState({hits: []});\n  const [url, setUrl] = useState('bla');\n\n  console.log('url', url);\n\n  // console.log('data', data);\n\n  // change it to read from the input field instead of hardcoded path\n  // useEffect(() => {\n  const fetchData = async () => {\n    console.log('ÃšRL', url);\n    try {\n      const response = await axios.get(`${baseUrl}/api/${url}?key=${key}`);\n      console.log('RESPONSE:', response);\n      setData(response.data);\n    } catch (error) {\n      console.log('ERROR', error);\n    }\n  };\n  // fetchData();\n  // }, [url]);\n  return (\n    <>\n      <p>\n        There will be text here explaining a tiny bit about the API. And also\n        explaining what you can and can't do with the API eplorer below\n      </p>\n      <Form>\n        <Form.Row className='groupURLexample d-flex justify-content-center align-items-center'>\n          <Col xs='auto column1'>\n            <Form.Label htmlFor='inlineFormInputGroup' srOnly>\n              Username\n            </Form.Label>\n            <InputGroup className='d-flex align-items-center'>\n              <InputGroup.Prepend>\n                <InputGroup.Text className='staticURLexample'>\n                  https://synthesizer-api.herokuapp.com/api/\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                id='inputURLexample'\n                placeholder='synths'\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n              />\n            </InputGroup>\n          </Col>\n          <Col xs='auto column2'>\n            <Button className='submitUrl' onClick={fetchData}>\n              Submit\n            </Button>\n          </Col>\n        </Form.Row>\n      </Form>\n      <Form>\n        <Form.Group\n          controlId='exampleForm.ControlTextarea1'\n          className='resJSON'\n        >\n          <Form.Label></Form.Label>\n          <Form.Control\n            as='textarea'\n            className='textareaExample'\n            rows={8}\n            value={jsonParsed}\n            readOnly\n          />\n        </Form.Group>\n      </Form>\n    </>\n  );\n}\n\nexport default UrlExplorer;\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":3,"column":26,"nodeType":"63","messageId":"64","endLine":3,"endColumn":35},{"ruleId":"61","severity":1,"message":"66","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":13},{"ruleId":"57","replacedBy":"67"},{"ruleId":"59","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"65","line":2,"column":26,"nodeType":"63","messageId":"64","endLine":2,"endColumn":35},{"ruleId":"61","severity":1,"message":"69","line":29,"column":10,"nodeType":"63","messageId":"64","endLine":29,"endColumn":14},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.",["70"],["71"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]